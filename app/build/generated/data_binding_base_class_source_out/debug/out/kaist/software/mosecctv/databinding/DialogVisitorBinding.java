// Generated by view binder compiler. Do not edit!
package kaist.software.mosecctv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kaist.software.mosecctv.R;

public final class DialogVisitorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RadioButton basicRadio;

  @NonNull
  public final RadioButton blackRadio;

  @NonNull
  public final Button delete;

  @NonNull
  public final TextInputLayout name;

  @NonNull
  public final TextInputEditText nameEdit;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final Spinner schedule;

  @NonNull
  public final TextView title;

  @NonNull
  public final Button update;

  private DialogVisitorBinding(@NonNull ConstraintLayout rootView, @NonNull RadioButton basicRadio,
      @NonNull RadioButton blackRadio, @NonNull Button delete, @NonNull TextInputLayout name,
      @NonNull TextInputEditText nameEdit, @NonNull RadioGroup radioGroup,
      @NonNull Spinner schedule, @NonNull TextView title, @NonNull Button update) {
    this.rootView = rootView;
    this.basicRadio = basicRadio;
    this.blackRadio = blackRadio;
    this.delete = delete;
    this.name = name;
    this.nameEdit = nameEdit;
    this.radioGroup = radioGroup;
    this.schedule = schedule;
    this.title = title;
    this.update = update;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogVisitorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogVisitorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_visitor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogVisitorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.basic_radio;
      RadioButton basicRadio = rootView.findViewById(id);
      if (basicRadio == null) {
        break missingId;
      }

      id = R.id.black_radio;
      RadioButton blackRadio = rootView.findViewById(id);
      if (blackRadio == null) {
        break missingId;
      }

      id = R.id.delete;
      Button delete = rootView.findViewById(id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.name;
      TextInputLayout name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.nameEdit;
      TextInputEditText nameEdit = rootView.findViewById(id);
      if (nameEdit == null) {
        break missingId;
      }

      id = R.id.radio_group;
      RadioGroup radioGroup = rootView.findViewById(id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.schedule;
      Spinner schedule = rootView.findViewById(id);
      if (schedule == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      id = R.id.update;
      Button update = rootView.findViewById(id);
      if (update == null) {
        break missingId;
      }

      return new DialogVisitorBinding((ConstraintLayout) rootView, basicRadio, blackRadio, delete,
          name, nameEdit, radioGroup, schedule, title, update);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
