// Generated by view binder compiler. Do not edit!
package kaist.software.mosecctv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kaist.software.mosecctv.R;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final RecyclerView logListView;

  @NonNull
  public final TextView txt1;

  @NonNull
  public final VideoView videoView;

  @NonNull
  public final FrameLayout viewLayout;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imageView,
      @NonNull RecyclerView logListView, @NonNull TextView txt1, @NonNull VideoView videoView,
      @NonNull FrameLayout viewLayout) {
    this.rootView = rootView;
    this.imageView = imageView;
    this.logListView = logListView;
    this.txt1 = txt1;
    this.videoView = videoView;
    this.viewLayout = viewLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_view;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.log_list_view;
      RecyclerView logListView = rootView.findViewById(id);
      if (logListView == null) {
        break missingId;
      }

      id = R.id.txt1;
      TextView txt1 = rootView.findViewById(id);
      if (txt1 == null) {
        break missingId;
      }

      id = R.id.video_view;
      VideoView videoView = rootView.findViewById(id);
      if (videoView == null) {
        break missingId;
      }

      id = R.id.view_layout;
      FrameLayout viewLayout = rootView.findViewById(id);
      if (viewLayout == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, imageView, logListView, txt1,
          videoView, viewLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
